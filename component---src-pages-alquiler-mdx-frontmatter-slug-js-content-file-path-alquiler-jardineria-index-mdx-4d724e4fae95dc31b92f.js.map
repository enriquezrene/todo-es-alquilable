{"version":3,"file":"component---src-pages-alquiler-mdx-frontmatter-slug-js-content-file-path-alquiler-jardineria-index-mdx-4d724e4fae95dc31b92f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/alquiler/item.js","webpack://gatsby-starter-default/./alquiler/jardineria/index.mdx","webpack://gatsby-starter-default/./src/pages/alquiler/{mdx.frontmatter__slug}.js","webpack://gatsby-starter-default/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\n\nconst Item = ({ node }) => {\n  const [showModal, setShowModal] = useState(false)\n  const modalRef = useRef(null)\n  const image = getImage(node.imagen)\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setShowModal(false)\n      }\n    }\n    if (showModal) {\n      document.addEventListener('mousedown', handleClickOutside)\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [showModal])\n\n  return (\n    <>\n      <div className=\"col-md-4\">\n        <div className=\"card mb-4 shadow-sm\">\n          <GatsbyImage className=\"bd-placeholder-img\"\n            image={image}\n            alt={node.nombre}\n            style={{ maxHeight: 350, margin: '0 auto' }}\n          />\n          <div className=\"card-body\">\n            <p className=\"card-text\">{node.descripcion}{console.log(node.descripcion)}</p>\n            <p className=\"card-text\">{node.precio} USD</p>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <div className=\"btn-group\">\n                <a\n                  href={`https://wa.me/${node.telefono}?text=Hola,%20quiero%20alquilar:%20${encodeURIComponent(node.nombre)}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"btn btn-sm btn-primary\"\n                >\n                  Alquilar\n                </a>\n                <button\n                  className=\"btn btn-sm btn-info ms-2\"\n                  onClick={() => setShowModal(true)}\n                >\n                  Leer Más\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && (\n        <div\n          className=\"modal fade show\"\n          style={{\n            display: 'block',\n            background: 'rgba(0,0,0,0.5)',\n            position: 'fixed',\n            top: 0, left: 0, width: '100vw', height: '100vh',\n            zIndex: 50\n          }}\n        >\n          <div className=\"modal-dialog modal-lg modal-dialog-centered\" style={{ pointerEvents: 'none' }}>\n            <div className=\"modal-content\" ref={modalRef} style={{ pointerEvents: 'auto' }}>\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">{node.nombre}</h5>\n                <button type=\"button\" className=\"btn-close\" onClick={() => setShowModal(false)}></button>\n              </div>\n              <div className=\"modal-body text-center\">\n                <GatsbyImage image={image} alt={node.nombre} style={{ maxHeight: 350, margin: '0 auto' }} />\n                <p className=\"mt-3\"><strong>Descripción:</strong> {node.descripcion_larga || node.descripcion}</p>\n                <p><strong>Precio:</strong> {node.precio} USD</p>\n                <p><strong>Teléfono:</strong> {node.telefono}</p>\n              </div>\n              <div className=\"modal-footer\">\n                <a\n                  href={`https://wa.me/${node.telefono}?text=Hola,%20quiero%20alquilar:%20${encodeURIComponent(node.nombre)}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"btn btn-sm btn-primary\"\n                >\n                  Alquilar\n                </a>\n                <button className=\"btn btn-sm btn-secondary\" onClick={() => setShowModal(false)}>\n                  Cerrar\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Item","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"Jardineria\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/todo-es-alquilable/todo-es-alquilable/alquiler/jardineria/index.mdx\";\nimport * as React from 'react';\nimport Layout from '../../components/layout';\nimport Item from '../../components/alquiler/item';\nimport Seo from '../../components/seo';\nimport {graphql} from 'gatsby';\nconst BlogPost = ({data}) => {\n  const titulo = data.mdx.frontmatter.titulo;\n  const description = data.mdx.frontmatter.descripcion;\n  return React.createElement(Layout, {\n    pageTitle: titulo,\n    description: description\n  }, React.createElement(\"div\", {\n    className: \"row\"\n  }, data.mdx.frontmatter.items.map(item => {\n    return React.createElement(Item, {\n      key: item.nombre,\n      node: item\n    });\n  })));\n};\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.titulo\n});\nexport const query = graphql`\n    query ($id: String) {\n        mdx(id: {eq: $id}) {\n            frontmatter {\n                titulo\n                descripcion\n                items {\n                    precio\n                    descripcion\n                    nombre\n                    telefono\n                    imagen {\n                        childImageSharp {\n                            gatsbyImageData(height: 225, layout: CONSTRAINED)\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_ref","node","showModal","setShowModal","useState","modalRef","useRef","image","getImage","imagen","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","React","className","GatsbyImage","alt","nombre","style","maxHeight","margin","descripcion","console","log","precio","href","telefono","encodeURIComponent","rel","onClick","display","background","position","top","left","width","height","zIndex","pointerEvents","ref","type","descripcion_larga","_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","wrapper","MDXLayout","BlogPost","data","titulo","mdx","frontmatter","description","Layout","pageTitle","items","map","item","Item","key","Head","_ref2","Seo","title","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}