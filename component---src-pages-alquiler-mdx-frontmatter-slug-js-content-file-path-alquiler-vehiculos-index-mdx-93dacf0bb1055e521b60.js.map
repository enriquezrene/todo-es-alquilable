{"version":3,"file":"component---src-pages-alquiler-mdx-frontmatter-slug-js-content-file-path-alquiler-vehiculos-index-mdx-93dacf0bb1055e521b60.js","mappings":"oOAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,MAClD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOQ,QAASC,GAAaP,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWT,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCNA,MAAMU,EAAWC,IAAY,IAAX,KAACC,GAAKD,EACtB,MAAME,EAASD,EAAKE,IAAIC,YAAYF,OAC9BG,EAAcJ,EAAKE,IAAIC,YAAYE,YACzC,OAAOV,EAAAA,cAAoBW,EAAAA,EAAQ,CACjCC,UAAWN,EACXG,YAAaA,GACZT,EAAAA,cAAoB,MAAO,CAC5Ba,UAAW,OACVR,EAAKE,IAAIC,YAAYM,MAAMC,IAAIC,GACzBhB,EAAAA,cAAoBiB,EAAAA,EAAM,CAC/BC,IAAKF,EAAKG,OACVC,KAAMJ,QAICK,EAAOC,IAAA,IAAC,KAACjB,GAAKiB,EAAA,OAAKtB,EAAAA,cAAoBuB,EAAAA,EAAK,CACvDC,MAAOnB,EAAKE,IAAIC,YAAYF,UAuBf,SAASmB,EAAiBhC,GACvC,OAAOO,EAAAA,cAAoBG,EAAUV,EAAOO,EAAAA,cAAoB0B,EAAqBjC,GACvF,C,+CCVA,IAlCaW,IAAe,IAAd,KAAEgB,GAAMhB,EAEpBuB,QAAQC,IAAIR,EAAM,mBAClB,MAAMS,GAAQC,EAAAA,EAAAA,GAASV,EAAKW,QAC5B,OACE/B,EAAAA,cAAA,OAAKa,UAAU,YACbb,EAAAA,cAAA,OAAKa,UAAU,uBACbb,EAAAA,cAACgC,EAAAA,EAAW,CAACnB,UAAU,qBACrBgB,MAAOA,EACPI,IAAKb,EAAKD,SAEZnB,EAAAA,cAAA,OAAKa,UAAU,aACbb,EAAAA,cAAA,KAAGa,UAAU,aAAaO,EAAKV,aAC/BV,EAAAA,cAAA,KAAGa,UAAU,aAAaO,EAAKc,OAAO,QACtClC,EAAAA,cAAA,OAAKa,UAAU,qDACbb,EAAAA,cAAA,OAAKa,UAAU,aACbb,EAAAA,cAAA,KACEmC,KAAM,iEAAiEC,mBAAmBhB,EAAKD,WAAWiB,mBAAmBhB,EAAKV,eAClI2B,OAAO,SACPC,IAAI,sBACJzB,UAAU,kCACX,aAIHb,EAAAA,cAAA,aAAO,a,sECKZ,MAAMuC,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBzC,GAC/B,MAAM0C,EAAoB,aAAiBF,GAG3C,OAAO,UAAc,IAEO,mBAAfxC,EACFA,EAAW0C,GAGb,IAAIA,KAAsB1C,GAChC,CAAC0C,EAAmB1C,GACzB,C","sources":["webpack://gatsby-starter-default/./alquiler/vehiculos/index.mdx","webpack://gatsby-starter-default/./src/pages/alquiler/{mdx.frontmatter__slug}.js","webpack://gatsby-starter-default/./src/components/alquiler/item.js","webpack://gatsby-starter-default/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"One\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/todo-es-alquilable/todo-es-alquilable/alquiler/vehiculos/index.mdx\";\nimport * as React from 'react';\nimport Layout from '../../components/layout';\nimport Item from '../../components/alquiler/item';\nimport Seo from '../../components/seo';\nimport {graphql} from 'gatsby';\nconst BlogPost = ({data}) => {\n  const titulo = data.mdx.frontmatter.titulo;\n  const description = data.mdx.frontmatter.descripcion;\n  return React.createElement(Layout, {\n    pageTitle: titulo,\n    description: description\n  }, React.createElement(\"div\", {\n    className: \"row\"\n  }, data.mdx.frontmatter.items.map(item => {\n    return React.createElement(Item, {\n      key: item.nombre,\n      node: item\n    });\n  })));\n};\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.titulo\n});\nexport const query = graphql`\n    query ($id: String) {\n        mdx(id: {eq: $id}) {\n            frontmatter {\n                titulo\n                descripcion\n                items {\n                    precio\n                    descripcion\n                    nombre\n                    imagen {\n                        childImageSharp {\n                            gatsbyImageData(height: 225, layout: CONSTRAINED)\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from 'react'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\n\nconst Item = ({ node }) => {\n\n  console.log(node, 'node in item.js');\n  const image = getImage(node.imagen)\n  return (\n    <div className=\"col-md-4\">\n      <div className=\"card mb-4 shadow-sm\">\n        <GatsbyImage className=\"bd-placeholder-img\"\n          image={image}\n          alt={node.nombre}\n        />\n        <div className=\"card-body\">\n          <p className=\"card-text\">{node.descripcion}</p>\n          <p className=\"card-text\">{node.precio} USD</p>\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"btn-group\">\n              <a\n                href={`https://wa.me/+593998960052?text=Hola,%20quiero%20alquilar:%20${encodeURIComponent(node.nombre)}-${encodeURIComponent(node.descripcion)}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"btn btn-sm btn-outline-primary\"\n              >\n                Alquilar\n              </a>\n            </div>\n            <small>9 min</small>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Item;","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","data","titulo","mdx","frontmatter","description","descripcion","Layout","pageTitle","className","items","map","item","Item","key","nombre","node","Head","_ref2","Seo","title","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","console","log","image","getImage","imagen","GatsbyImage","alt","precio","href","encodeURIComponent","target","rel","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}